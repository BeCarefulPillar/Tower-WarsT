//this source code was auto-generated by tolua#, do not modify it
using System;
using LuaInterface;

public class UMonoBehaviourWrap
{
	public static void Register(LuaState L)
	{
		L.BeginClass(typeof(UMonoBehaviour), typeof(UnityEngine.MonoBehaviour));
		L.RegFunction("Active", Active);
		L.RegFunction("__eq", op_Equality);
		L.RegFunction("__tostring", ToLua.op_ToString);
		L.RegVar("cachedGameObject", get_cachedGameObject, null);
		L.RegVar("cachedTransform", get_cachedTransform, null);
		L.EndClass();
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int Active(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			UMonoBehaviour obj = (UMonoBehaviour)ToLua.CheckObject<UMonoBehaviour>(L, 1);
			bool arg0 = LuaDLL.luaL_checkboolean(L, 2);
			//obj.Active(arg0);
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int op_Equality(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			UnityEngine.Object arg0 = (UnityEngine.Object)ToLua.ToObject(L, 1);
			UnityEngine.Object arg1 = (UnityEngine.Object)ToLua.ToObject(L, 2);
			bool o = arg0 == arg1;
			LuaDLL.lua_pushboolean(L, o);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_cachedGameObject(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			UMonoBehaviour obj = (UMonoBehaviour)o;
			UnityEngine.GameObject ret = obj.cachedGameObject;
			ToLua.PushSealed(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index cachedGameObject on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_cachedTransform(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			UMonoBehaviour obj = (UMonoBehaviour)o;
			UnityEngine.Transform ret = obj.cachedTransform;
			ToLua.Push(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index cachedTransform on a nil value");
		}
	}
}


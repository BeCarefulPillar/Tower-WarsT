//this source code was auto-generated by tolua#, do not modify it
using System;
using LuaInterface;

public class GameWrap
{
	public static void Register(LuaState L)
	{
		L.BeginClass(typeof(Game), typeof(System.Object));
		L.RegFunction("StartUp", StartUp);
		L.RegFunction("__tostring", ToLua.op_ToString);
		L.RegVar("Ins", get_Ins, null);
		L.RegVar("LuaMgr", get_LuaMgr, null);
		L.RegVar("PanelMgr", get_PanelMgr, null);
		L.RegVar("SoundMgr", get_SoundMgr, null);
		L.RegVar("ResourceMgr", get_ResourceMgr, null);
		L.RegVar("ThreadMgr", get_ThreadMgr, null);
		L.RegVar("GameMgr", get_GameMgr, null);
		L.EndClass();
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int StartUp(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			Game obj = (Game)ToLua.CheckObject<Game>(L, 1);
			obj.StartUp();
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_Ins(IntPtr L)
	{
		try
		{
			ToLua.PushObject(L, Game.Ins);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_LuaMgr(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Game obj = (Game)o;
			LuaManager ret = obj.LuaMgr;
			ToLua.Push(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index LuaMgr on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_PanelMgr(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Game obj = (Game)o;
			PanelManager ret = obj.PanelMgr;
			ToLua.Push(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index PanelMgr on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_SoundMgr(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Game obj = (Game)o;
			SoundManager ret = obj.SoundMgr;
			ToLua.Push(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index SoundMgr on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_ResourceMgr(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Game obj = (Game)o;
			ResourceManager ret = obj.ResourceMgr;
			ToLua.Push(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index ResourceMgr on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_ThreadMgr(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Game obj = (Game)o;
			ThreadManager ret = obj.ThreadMgr;
			ToLua.Push(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index ThreadMgr on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_GameMgr(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			Game obj = (Game)o;
			GameManager ret = obj.GameMgr;
			ToLua.Push(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index GameMgr on a nil value");
		}
	}
}

